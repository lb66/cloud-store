{"version":3,"sources":["components/Uploader.js","pages/Home.js"],"names":["Dragger","Upload","Text","Typography","Border","styled","div","Component","observer","useStores","fileStore","userStore","props","beforeUpload","file","currentUser","size","message","error","setFile","setFilename","name","upload","then","serverFile","success","console","log","catch","showUploadList","tip","spinning","isUploading","className","InboxOutlined","style","textAlign","filename","copyable","tooltips","attributes","url","marginRight","target","href","onClick","require","saveAs","Home","username","type","showIcon","Uploader"],"mappings":"+XAOQA,EAAYC,IAAZD,QACAE,EAASC,IAATD,KAEFE,EAASC,IAAOC,IAAV,KA4EGC,EArEGC,aAAS,WAAO,IAAD,EACCC,cAAxBC,EADuB,EACvBA,UAAUC,EADa,EACbA,UAEZC,EAAQ,CAEZC,aAAc,SAACC,GAEb,OAAIH,EAAUI,YAIVD,EAAKE,KAAO,UACdC,IAAQC,MAAM,8DACP,IAETR,EAAUS,QAAQL,GAClBJ,EAAUU,YAAYN,EAAKO,MAC3BX,EAAUY,SACPC,MAAK,SAACC,GACLP,IAAQQ,QAAQ,4BAChBC,QAAQC,IAAI,2BAAQH,MAErBI,OAAM,SAACV,GACND,IAAQC,MAAM,4BACdQ,QAAQC,IAAI,2BAAQT,OAEjB,IAlBLD,IAAQC,MAAM,uBACP,IAmBXW,gBAAgB,GAOlB,OACE,6BACE,kBAAC,IAAD,CAAMC,IAAI,qBAAMC,SAAUrB,EAAUsB,aAClC,kBAAChC,EAAYY,EACX,uBAAGqB,UAAU,wBACX,kBAACC,EAAA,EAAD,OAEF,uBAAGD,UAAU,mBAAb,iGACA,uBAAGA,UAAU,mBAAb,mEAGJ,6BAEIvB,EAAUc,WAAa,kBAACpB,EAAD,KACrB,wBAAI+B,MAAO,CAAEC,UAAW,WAAa1B,EAAU2B,UAC/C,4BACE,8CACO,kBAACnC,EAAD,CAAMoC,SAAU,CAAEC,SAAU,CAAC,eAAM,+BACrC7B,EAAUc,WAAWgB,WAAWC,IAAID,WAAWC,MAGpD,6BACA,4BACE,kBAAC,IAAD,CAAQN,MAAO,CAAEO,YAAa,SAAU,uBAAGC,OAAO,SAASC,KAAMlC,EAAUc,WAAWgB,WAAWC,IAAID,WAAWC,KAAxE,iBACxC,kBAAC,IAAD,CAAQI,QAAS,WA5BXC,EAAQ,KAChBC,OAAOrC,EAAUc,WAAWgB,WAAWC,IAAID,WAAWC,IAAK/B,EAAU2B,YA2BnE,mBAGM,U,SCxEhBW,EAAOxC,aAAS,WAAO,IACnBG,EAAcF,cAAdE,UAER,OACE,oCAEIA,EAAUI,YAAc,+CAAWJ,EAAUI,YAAYyB,WAAWS,SAAS,8BAAY,kBAAC,IAAD,CAAOhC,QAAQ,yDAAYiC,KAAK,UAAUC,UAAQ,IAE7I,6BACA,kBAACC,EAAD,UAKSJ","file":"static/js/9.a4cf906e.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useStores } from '../stores'\r\nimport { observer } from 'mobx-react'\r\nimport { Upload, message, Spin, Typography, Button } from 'antd';\r\nimport { InboxOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components'\r\n\r\nconst { Dragger } = Upload;\r\nconst { Text } = Typography;\r\n\r\nconst Border = styled.div`\r\nmargin-top:20px;\r\nborder:1px dashed #d9d9d9;\r\npadding:20px;\r\nbackground:#fafafa\r\n`\r\n\r\nconst Component = observer(() => {\r\n  const { fileStore,userStore } = useStores()\r\n\r\n  const props = {\r\n    //手动上传\r\n    beforeUpload: (file) => {\r\n      // window.file = file\r\n      if(!userStore.currentUser){\r\n        message.error('未登录');\r\n        return false\r\n      }\r\n      if (file.size > 10485760) {\r\n        message.error('上传文件不能大于10M！');\r\n        return false\r\n      }\r\n      fileStore.setFile(file)\r\n      fileStore.setFilename(file.name)\r\n      fileStore.upload()\r\n        .then((serverFile) => {\r\n          message.success('上传成功')\r\n          console.log('上传成功', serverFile)\r\n        })\r\n        .catch((error) => {\r\n          message.error('上传失败')\r\n          console.log('上传失败', error)\r\n        })\r\n      return false;\r\n    },\r\n    showUploadList: false\r\n  }\r\n  const download=()=>{\r\n    const FileSaver = require('file-saver');\r\n    FileSaver.saveAs(fileStore.serverFile.attributes.url.attributes.url, fileStore.filename);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Spin tip='上传中' spinning={fileStore.isUploading}>\r\n        <Dragger {...props}>\r\n          <p className=\"ant-upload-drag-icon\">\r\n            <InboxOutlined />\r\n          </p>\r\n          <p className=\"ant-upload-text\">点击选择文件 / 将文件拖入此虚线框</p>\r\n          <p className=\"ant-upload-hint\">支持上传小于 10 MB 的文件</p>\r\n        </Dragger>\r\n      </Spin>\r\n      <div>\r\n        {\r\n          fileStore.serverFile ? <Border>\r\n            <h2 style={{ textAlign: 'center' }}>{fileStore.filename}</h2>\r\n            <dl>\r\n              <dd>\r\n                地址 : <Text copyable={{ tooltips: ['复制', '复制成功!'] }}>\r\n                  {fileStore.serverFile.attributes.url.attributes.url}\r\n                </Text>\r\n              </dd>\r\n              <br />\r\n              <dd>\r\n                <Button style={{ marginRight: '20px' }}><a target='_blank' href={fileStore.serverFile.attributes.url.attributes.url} >预览</a></Button>\r\n                <Button onClick={()=>{download()}}>下载</Button>\r\n              </dd>\r\n            </dl>\r\n          </Border> : null\r\n        }\r\n      </div>\r\n    </div >\r\n  )\r\n})\r\n\r\nexport default Component\r\n\r\n","import React from 'react'\r\nimport { observer } from 'mobx-react'\r\nimport { useStores } from '../stores'\r\nimport Uploader from '../components/Uploader'\r\nimport { Alert } from 'antd'\r\n\r\n\r\nconst Home = observer(() => {\r\n  const { userStore } = useStores();\r\n\r\n  return (\r\n    <>\r\n      {\r\n        userStore.currentUser ? <>Hello , {userStore.currentUser.attributes.username}<br /></> : <Alert message=\"请登录后再上传文件\" type=\"warning\" showIcon />\r\n      }\r\n      <br />\r\n      <Uploader />\r\n    </>\r\n  )\r\n})\r\n\r\nexport default Home"],"sourceRoot":""}