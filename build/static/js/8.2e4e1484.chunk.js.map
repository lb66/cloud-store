{"version":3,"sources":["components/List.js","pages/History.js"],"names":["Component","observer","myUploadStore","useStores","Text","Typography","useEffect","unmount","React","useState","visible","setVisible","confirmLoading","setConfirmLoading","chosenId","setId","handleCancel","initialLoad","pageStart","loadMore","find","hasMore","isLoading","useWindow","dataSource","list","renderItem","item","Item","key","id","Meta","title","attributes","filename","description","copyable","tooltips","url","type","target","href","onClick","require","saveAs","download","danger","onOk","delete","setTimeout","handleOk","onCancel","okText","cancelText","width","size","tip","History","userStore","currentUser","List","message","showIcon"],"mappings":"qOAuFeA,EAjFGC,aAAS,WAAO,IACxBC,EAAkBC,cAAlBD,cACAE,EAASC,IAATD,KAERE,qBAAU,WACR,OAAO,WACLJ,EAAcK,aAEf,IAEH,IAV+B,EAiBDC,IAAMC,UAAS,GAjBd,mBAiBxBC,EAjBwB,KAiBfC,EAjBe,OAkBaH,IAAMC,UAAS,GAlB5B,mBAkBxBG,EAlBwB,KAkBRC,EAlBQ,OAmBRL,IAAMC,SAAS,GAnBP,mBAmBxBK,EAnBwB,KAmBfC,EAnBe,KAqBzBC,EAAe,WACnBL,GAAW,IAYb,OACE,kBAAC,IAAD,CACEM,aAAa,EACbC,UAAW,EACXC,SA5Ba,WAAQjB,EAAckB,QA6BnCC,SAAUnB,EAAcoB,WAAapB,EAAcmB,QACnDE,WAAW,GAEX,kBAAC,IAAD,CACEC,WAAYtB,EAAcuB,KAC1BC,WAAY,SAAAC,GAAI,OACd,kBAAC,IAAKC,KAAN,CAAWC,IAAKF,EAAKG,IACnB,kBAAC,IAAKF,KAAKG,KAAX,CACEC,MAAOL,EAAKM,WAAWC,SACvBC,YAAa,kBAAC/B,EAAD,CAAMgC,SAAU,CAAEC,SAAU,CAAC,eAAM,+BAAaV,EAAKM,WAAWK,IAAIL,WAAWK,OAE9F,6BACE,kBAAC,IAAD,CAAQC,KAAK,QAAO,uBAAGC,OAAO,SAASC,KAAMd,EAAKM,WAAWK,IAAIL,WAAWK,KAAxD,iBACpB,kBAAC,IAAD,CAAQC,KAAK,OAAOG,QAAS,YAxCxB,SAACf,GACEgB,EAAQ,KAChBC,OAAOjB,EAAKM,WAAWK,IAAIL,WAAWK,IAAKX,EAAKM,WAAWC,UAsCtBW,CAASlB,KAA9C,gBACA,kBAAC,IAAD,CAAQY,KAAK,OAAOO,QAAM,EAACJ,QAAS,WAClC/B,GAAW,GACXI,EAAMY,KAFR,gBAIA,kBAAC,IAAD,CACEK,MAAM,eACNtB,QAASA,EACTE,eAAgBA,EAChBmC,KAAM,kBArCH,SAACpB,GAChBd,GAAkB,GAClBX,EAAc8C,OAAOrB,EAAKG,IAC1BmB,YAAW,WACTtC,GAAW,GACXE,GAAkB,GAClBX,EAAcK,YACb,KA8BmB2C,CAASpC,IACnBqC,SAAUnC,EACVoC,OAAO,eACPC,WAAW,eACXC,MAAO,KACR,qFAKNpD,EAAcoB,WAAapB,EAAcmB,SACxC,6BACE,kBAAC,IAAD,CAAMkC,KAAK,QAAQC,IAAI,6B,SC/DpBC,UAXf,WAAoB,IACVC,EAAcvD,cAAduD,UACR,OACE,oCAEIA,EAAUC,YAAc,kBAACC,EAAD,MAAW,kBAAC,IAAD,CAAOC,QAAQ,+DAAatB,KAAK,UAAUuB,UAAQ","file":"static/js/8.2e4e1484.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { observer } from 'mobx-react'\r\nimport { useStores } from '../stores'\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport { List, Spin, Typography, Button, Modal } from 'antd';\r\n\r\nconst Component = observer(() => {\r\n  const { myUploadStore } = useStores()\r\n  const { Text } = Typography;\r\n\r\n  useEffect(() => {\r\n    return () => {  // 卸载\r\n      myUploadStore.unmount()\r\n    }\r\n  }, [])\r\n\r\n  const loadMore = () => { myUploadStore.find() }\r\n\r\n  const download = (item) => {\r\n    const FileSaver = require('file-saver');\r\n    FileSaver.saveAs(item.attributes.url.attributes.url, item.attributes.filename);\r\n  }\r\n\r\n  const [visible, setVisible] = React.useState(false)\r\n  const [confirmLoading, setConfirmLoading] = React.useState(false);\r\n  const [chosenId,setId]=React.useState(0)\r\n\r\n  const handleCancel = () => {\r\n    setVisible(false)\r\n  }\r\n  const handleOk = (item) => {\r\n    setConfirmLoading(true);\r\n    myUploadStore.delete(item.id)\r\n    setTimeout(() => {\r\n      setVisible(false);\r\n      setConfirmLoading(false);\r\n      myUploadStore.unmount()\r\n    }, 1000);\r\n  }\r\n\r\n  return (\r\n    <InfiniteScroll\r\n      initialLoad={true}\r\n      pageStart={0}\r\n      loadMore={loadMore}\r\n      hasMore={!myUploadStore.isLoading && myUploadStore.hasMore}\r\n      useWindow={true}\r\n    >\r\n      <List\r\n        dataSource={myUploadStore.list}\r\n        renderItem={item => (\r\n          <List.Item key={item.id}>\r\n            <List.Item.Meta\r\n              title={item.attributes.filename}\r\n              description={<Text copyable={{ tooltips: ['复制', '复制成功!'] }}>{item.attributes.url.attributes.url}</Text>}\r\n            />\r\n            <div>\r\n              <Button type=\"link\"><a target='_blank' href={item.attributes.url.attributes.url}>预览</a></Button>\r\n              <Button type=\"link\" onClick={() => { download(item) }}>下载</Button>\r\n              <Button type=\"link\" danger onClick={() => {\r\n                setVisible(true)\r\n                setId(item)\r\n                }}>删除</Button>\r\n              <Modal\r\n                title=\"提示\"\r\n                visible={visible}\r\n                confirmLoading={confirmLoading}\r\n                onOk={()=>handleOk(chosenId)}\r\n                onCancel={handleCancel}\r\n                okText=\"确认\"\r\n                cancelText=\"取消\"\r\n                width={300}\r\n              ><p>是否删除此文件 ？</p></Modal>\r\n            </div>\r\n          </List.Item>\r\n        )}\r\n      >\r\n        {myUploadStore.isLoading && myUploadStore.hasMore && (\r\n          <div>\r\n            <Spin size=\"large\" tip='加载中' />\r\n          </div>\r\n        )}\r\n      </List>\r\n    </InfiniteScroll >\r\n  )\r\n})\r\n\r\nexport default Component","import React from 'react'\r\nimport List from '../components/List'\r\nimport { useStores } from '../stores/index'\r\nimport { Alert } from 'antd'\r\n\r\nfunction History() {\r\n  const { userStore } = useStores()\r\n  return (\r\n    <>\r\n      {\r\n        userStore.currentUser ? <List /> : <Alert message=\"登录即可查看上传历史\" type=\"warning\" showIcon />\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default History"],"sourceRoot":""}