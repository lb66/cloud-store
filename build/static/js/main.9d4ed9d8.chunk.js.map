{"version":3,"sources":["logo.svg","components/Header.js","components/Footer.js","App.js","reportWebVitals.js","index.js","models/index.js","stores/user.js","stores/file.js","stores/myUpload.js","stores/auth.js","stores/index.js"],"names":["StyleHeader","styled","header","StyleLogo","img","StyleLink","NavLink","StyleDiv","div","StyleButton","Button","Header","observer","useStores","userStore","authStore","history","useHistory","useEffect","pullUser","src","logo","to","activeClassName","exact","currentUser","attributes","username","ghost","onClick","logout","type","push","StyleFooter","footer","Footer","Home","lazy","History","Login","Register","App","fallback","size","tip","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","AV","init","appId","appKey","serverURL","Auth","password","user","User","setUsername","setPassword","Promise","resolve","reject","signUp","loginedUser","error","logIn","current","logOut","Uploader","add","file","filename","item","Object","avFile","File","set","save","serverFile","find","page","limit","query","Query","include","skip","equalTo","descending","result","delete","id","createWithoutData","destroy","window","this","observable","action","fileStore","newFilename","newFile","isUploading","catch","err","finally","myUploadStore","isLoading","newList","list","concat","length","hasMore","message","values","reset","stores","context","createContext","useContext"],"mappings":"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","file":"static/js/main.9d4ed9d8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React, { useEffect } from 'react'\r\nimport logo from '../logo.svg'\r\nimport styled from 'styled-components'\r\nimport { NavLink, useHistory } from 'react-router-dom'\r\nimport { Button } from 'antd';\r\nimport { useStores } from '../stores'\r\nimport { observer } from 'mobx-react'\r\n\r\n\r\nconst StyleHeader = styled.header`\r\nbackground-color:#303841;\r\ndisplay:flex;\r\nalign-items:center;\r\npadding:10px 5vw;\r\n`\r\nconst StyleLogo = styled.img`\r\nheight:25px;\r\n`\r\nconst StyleLink = styled(NavLink)`\r\ncolor:#fff;\r\nmargin-left:3vw;\r\n&.active{\r\n  border-bottom:1px solid #fff;\r\n}\r\n`\r\nconst StyleDiv = styled.div`\r\n  margin-left:auto;\r\n  color:orange;\r\n`\r\nconst StyleButton = styled(Button)`\r\n  margin-left:10px;\r\n`\r\nconst Header = observer(() => {\r\n  const { userStore, authStore } = useStores()\r\n  const history = useHistory()\r\n  const clickLogout = () => {\r\n    authStore.logout()\r\n  }\r\n  const clickLogin = () => {\r\n    history.push('./login') //跳转到登录页\r\n  }\r\n  const clickRegister = () => {\r\n    history.push('./register') //跳转到注册页\r\n  }\r\n  //每次刷新页面去抓取当前用户登录状态\r\n  useEffect(() => {\r\n    userStore.pullUser();\r\n  },[])\r\n\r\n  return (\r\n    <StyleHeader>\r\n      <StyleLogo src={logo} />\r\n      <nav>\r\n        <StyleLink to='/' activeClassName='active' exact>首页</StyleLink>\r\n        <StyleLink to='/history' activeClassName='active'>历史</StyleLink>\r\n      </nav>\r\n      <StyleDiv>\r\n        {\r\n          userStore.currentUser ? <>\r\n            {userStore.currentUser.attributes.username} <StyleButton ghost onClick={clickLogout}>注销</StyleButton>\r\n          </> : <>\r\n              <StyleButton type=\"primary\" onClick={clickLogin}>登录</StyleButton>\r\n              <StyleButton type=\"primary\" onClick={clickRegister}>注册</StyleButton>\r\n            </>\r\n        }\r\n      </StyleDiv>\r\n    </StyleHeader>\r\n  )\r\n})\r\n\r\nexport default Header","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyleFooter = styled.footer`\r\nfont-size:12px;\r\ntext-align:center;\r\ncolor:#aaa;\r\npadding:10px\r\n`\r\n\r\nfunction Footer() {\r\n  return (\r\n    <StyleFooter>\r\n      miku\r\n    </StyleFooter>\r\n  )\r\n}\r\n\r\nexport default Footer","import React, { Suspense, lazy } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport { Switch, Route } from 'react-router-dom';\nimport { Spin } from 'antd';\n\n\nconst Home = lazy(() => import('./pages/Home'))\nconst History = lazy(() => import('./pages/History'))\nconst Login = lazy(() => import('./pages/Login'))\nconst Register = lazy(() => import('./pages/Register'))\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <main>\n        <Suspense fallback={<Spin size=\"large\" tip='加载中' />}>\n          <Switch>\n            <Route path='/' exact component={Home} />\n            <Route path='/history' component={History} />\n            <Route path='/login' component={Login} />\n            <Route path='/register' component={Register} />\n          </Switch>\n        </Suspense>\n      </main>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  HashRouter as Router\n} from 'react-router-dom';\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import AV, { Query, User } from 'leancloud-storage'\r\n\r\nAV.init({\r\n  appId: \"hbACa0laapfvLgYDNsPOF0X4-9Nh9j0Va\",\r\n  appKey: \"R1AXOKFIi09Gric7RPae3pWn\",\r\n  serverURL: \"https://hbaca0la.lc-cn-e1-shared.com\"\r\n});\r\n\r\nconst Auth = {\r\n  register(username, password) {\r\n    let user = new User()\r\n    user.setUsername(username)\r\n    user.setPassword(password)\r\n    return new Promise((resolve, reject) => {\r\n      user.signUp().then(loginedUser => resolve(loginedUser), error => reject(error))\r\n    })\r\n  },\r\n  login(username, password) {\r\n    return new Promise((resolve, reject) => {\r\n      User.logIn(username, password).then(loginedUser => resolve(loginedUser), error => reject(error))\r\n    })\r\n  },\r\n  getCurrentUser() {\r\n    return User.current()\r\n  },\r\n  logout() {\r\n    User.logOut()\r\n  }\r\n}\r\n\r\nconst Uploader = {\r\n  add(file, filename) {\r\n    const item = new AV.Object('Files')\r\n    const avFile = new AV.File(filename, file)\r\n    item.set('filename', filename)\r\n    item.set('owner', AV.User.current())\r\n    item.set('url', avFile)\r\n    return new Promise((resolve, reject) => {\r\n      item.save().then(serverFile => resolve(serverFile), error => reject(error))\r\n    })\r\n  },\r\n  find({ page, limit }) {\r\n    const query = new Query(\"Files\")\r\n    query.include('owner')\r\n    query.limit(limit)\r\n    query.skip(page * limit)\r\n    query.equalTo('owner', User.current())\r\n    query.descending('createdAt');\r\n    return new Promise((resolve, reject) => {\r\n      query.find().then(result => resolve(result), error => reject(error))\r\n    })\r\n  },\r\n  delete(id) {\r\n    const item = AV.Object.createWithoutData('Files', id);\r\n    item.destroy();\r\n  }\r\n}\r\nwindow.Uploader = Uploader\r\nexport { Auth, Uploader }","import { observable, action } from 'mobx';\r\nimport { Auth } from '../models'\r\n\r\nclass UserStore {\r\n  @observable currentUser = null\r\n  @action pullUser() {\r\n    this.currentUser = Auth.getCurrentUser()\r\n  }\r\n  @action reset() {\r\n    this.currentUser = null\r\n  }\r\n}\r\nconst userStore = new UserStore()\r\nexport { userStore } ","import { observable, action } from 'mobx';\r\nimport { Uploader } from '../models';\r\n\r\n\r\nclass FileStore {\r\n  @observable file = null\r\n  @observable filename = ''\r\n  @observable isUploading = false\r\n  @observable serverFile = null\r\n\r\n  @action setFilename(newFilename) {\r\n    this.filename = newFilename\r\n  }\r\n\r\n  @action setFile(newFile) {\r\n    this.file = newFile\r\n  }\r\n\r\n  @action upload() {\r\n    this.isUploading = true\r\n    this.serverFile = null\r\n    return new Promise((resolve, reject) => {\r\n      Uploader.add(this.file, this.filename)\r\n        .then(serverFile => {        \r\n          this.serverFile = serverFile\r\n          resolve(serverFile)\r\n        }).catch(err => {\r\n          \r\n          reject(err)\r\n        }).finally(() => {\r\n          this.isUploading = false\r\n        })\r\n    })\r\n  }\r\n  @action reset() {\r\n    this.serverFile = null\r\n    this.isUploading = false\r\n  }\r\n}\r\nconst fileStore = new FileStore()\r\nexport { fileStore }","import { observable, action } from 'mobx';\r\nimport { message } from 'antd';\r\nimport { Uploader } from '../models';\r\n\r\nclass MyUploadStore {\r\n  @observable list = []\r\n  @observable isLoading = false\r\n  @observable hasMore = true\r\n  @observable page = 0\r\n\r\n  @action find() {\r\n    this.isLoading = true\r\n    Uploader.find({ page: this.page, limit: 15 })\r\n      .then(newList => {\r\n        this.list = this.list.concat(newList)\r\n        this.page++\r\n        if (newList.length < 15) {\r\n          this.hasMore = false\r\n        }\r\n      }).catch(error => {\r\n        message.error('加载数据失败')\r\n      }).finally(() => {\r\n        this.isLoading = false\r\n      })\r\n  }\r\n\r\n  @action delete(id){\r\n    Uploader.delete(id)\r\n  }\r\n\r\n  @action unmount() {\r\n    this.list = []\r\n    this.isLoading = false\r\n    this.hasMore = true\r\n    this.page = 0\r\n  }\r\n  @action reset() {\r\n    this.list = []\r\n    this.page = 0\r\n  }\r\n\r\n}\r\n\r\nconst myUploadStore = new MyUploadStore()\r\nexport { myUploadStore }","import { observable, action } from 'mobx';\r\nimport { Auth } from '../models'\r\nimport { message } from 'antd';\r\nimport { userStore } from './user'\r\nimport { fileStore } from './file';\r\nimport { myUploadStore } from './myUpload';\r\n\r\nclass AuthStore {\r\n  @observable values = {\r\n    username: '',\r\n    password: '',\r\n  };\r\n\r\n  @action setUsername(username) {\r\n    this.values.username = username\r\n  };\r\n\r\n  @action setPassword(password) {\r\n    this.values.password = password\r\n  };\r\n\r\n  @action login() {\r\n    return new Promise((resolve, reject) => {\r\n      Auth.login(this.values.username, this.values.password)\r\n        .then(user => {\r\n          userStore.pullUser()\r\n          resolve(user) \r\n        }).catch(error => {\r\n          message.error('登录失败')\r\n          userStore.reset()\r\n          reject(error)\r\n        })\r\n    })\r\n  };\r\n\r\n  @action register() {\r\n    return new Promise((resolve, reject) => {\r\n      Auth.register(this.values.username, this.values.password)\r\n        .then(user => {\r\n          userStore.pullUser()\r\n          resolve(user)\r\n        }).catch(error => {\r\n          message.error('注册失败')\r\n          userStore.reset()\r\n          reject(error)\r\n        })\r\n    })\r\n  }\r\n\r\n  @action logout() {\r\n    Auth.logout()\r\n    userStore.reset()\r\n    fileStore.reset()\r\n    myUploadStore.reset()\r\n  }\r\n}\r\nconst authStore = new AuthStore()\r\nexport { authStore }","import { createContext, useContext } from 'react'\r\nimport { authStore } from './auth'\r\nimport { userStore } from './user'\r\nimport { fileStore } from './file'\r\nimport {myUploadStore} from './myUpload'\r\n\r\nwindow.stores = { authStore, userStore, fileStore,myUploadStore }//控制台调试用\r\n\r\nconst context = createContext({ authStore, userStore, fileStore,myUploadStore })\r\n// useContext获取context的值以及订阅context的变化\r\nconst useStores = () => useContext(context)\r\nexport { useStores }"],"sourceRoot":""}